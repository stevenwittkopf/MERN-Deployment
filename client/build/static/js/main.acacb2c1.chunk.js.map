{"version":3,"sources":["components/createPetForm.js","components/editPetForm.js","components/petDetails.js","components/petTable.js","App.js","reportWebVitals.js","index.js"],"names":["CreatePetForm","useState","errors","setErrors","name","setName","petType","setPetType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","submitHandler","e","a","preventDefault","skills","length","push","axios","post","type","navigate","Object","values","response","data","map","error","message","style","display","justifyContent","to","borderStyle","onSubmit","index","value","onChange","target","backgroundColor","color","urlPrefix","EditPetForm","props","petLoaded","setPetLoaded","prevName","setPrevName","useEffect","get","id","request","pet","skillSetters","bound","Math","min","i","console","log","patch","renderErrors","PetDetails","setPet","isLiked","setIsLiked","petReq","adoptHandler","delete","likeHandler","onClick","skill","disabled","likes","PetTable","pets","setPets","petsReq","petList","sort","b","localeCompare","_id","App","className","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQA0GeA,EArGO,WAAO,IAAD,EACIC,mBAAS,IADb,mBACjBC,EADiB,KACTC,EADS,OAEAF,mBAAS,IAFT,mBAEjBG,EAFiB,KAEXC,EAFW,OAGMJ,mBAAS,IAHf,mBAGjBK,EAHiB,KAGRC,EAHQ,OAIcN,mBAAS,IAJvB,mBAIjBO,EAJiB,KAIJC,EAJI,OAKIR,mBAAS,IALb,mBAKjBS,EALiB,KAKTC,EALS,OAMIV,mBAAS,IANb,mBAMjBW,EANiB,KAMTC,EANS,OAOIZ,mBAAS,IAPb,mBAOjBa,EAPiB,KAOTC,EAPS,KAQlBC,EAAa,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DAClBD,EAAEE,iBACEC,EAAS,GACTV,EAAOW,OAAS,GAChBD,EAAOE,KAAKZ,GAEZE,EAAOS,OAAS,GAChBD,EAAOE,KAAKV,GAEZE,EAAOO,OAAS,GAChBD,EAAOE,KAAKR,GAVE,kBAaRS,IAAMC,KAAN,UAtBA,kCAsBA,WAAkC,CACpCpB,OACAqB,KAAMnB,EACNE,cACAY,WAjBU,OAmBdM,YAAS,KAnBK,kDAsBdvB,EAAUwB,OAAOC,OAAO,KAAIC,SAASC,KAAK5B,QAAQ6B,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAtBvD,0DAAH,sDAyCnB,OACI,gCACI,sBAAKC,MAAO,CACRC,QAAS,OACTC,eAAgB,iBAFpB,UAII,6CACA,cAAC,IAAD,CAAMC,GAAG,IAAT,+BAEJ,8BACI,8DAEJ,qBAAKH,MAAO,CACRI,YAAa,SADjB,SAGI,uBAAMC,SAAUvB,EAAhB,UA9Bc,IAAlBd,EAAOmB,OACA,GAIH,8BACI,6BACKnB,EAAO6B,KAAI,SAACC,EAAOQ,GAAR,OACR,6BAAiBR,GAARQ,UAwBjB,8BACI,+CACA,uBAAOf,KAAK,OAAOgB,MAAOrC,EAAMsC,SAAU,SAACzB,GAAD,OAAKZ,EAAQY,EAAE0B,OAAOF,aAEpE,8BACI,+CACA,uBAAOhB,KAAK,OAAOgB,MAAOnC,EAASoC,SAAU,SAACzB,GAAD,OAAKV,EAAWU,EAAE0B,OAAOF,aAE1E,8BACI,kDACA,uBAAOhB,KAAK,OAAOgB,MAAOjC,EAAakC,SAAU,SAACzB,GAAD,OAAKR,EAAeQ,EAAE0B,OAAOF,aAElF,oDACA,8BACI,8CACA,uBAAOhB,KAAK,OAAOgB,MAAO/B,EAAQgC,SAAU,SAACzB,GAAD,OAAKN,EAAUM,EAAE0B,OAAOF,aAExE,8BACI,8CACA,uBAAOhB,KAAK,OAAOgB,MAAO7B,EAAQ8B,SAAU,SAACzB,GAAD,OAAKJ,EAAUI,EAAE0B,OAAOF,aAExE,8BACI,8CACA,uBAAOhB,KAAK,OAAOgB,MAAO3B,EAAQ4B,SAAU,SAACzB,GAAD,OAAKF,EAAUE,EAAE0B,OAAOF,aAExE,wBAAQhB,KAAK,SAASS,MAAO,CACzBU,gBAAiB,OACjBC,MAAO,SAFX,8BC5FdC,EAAY,kCAuJHC,EAtJK,SAACC,GAAW,IAAD,EACC/C,mBAAS,IADV,mBACpBC,EADoB,KACZC,EADY,OAEOF,oBAAS,GAFhB,mBAEpBgD,EAFoB,KAETC,EAFS,OAGKjD,mBAAS,IAHd,mBAGpBkD,EAHoB,KAGVC,EAHU,OAIHnD,mBAAS,IAJN,mBAIpBG,EAJoB,KAIdC,EAJc,OAKGJ,mBAAS,IALZ,mBAKpBK,EALoB,KAKXC,EALW,OAMWN,mBAAS,IANpB,mBAMpBO,EANoB,KAMPC,EANO,OAOCR,mBAAS,IAPV,mBAOpBS,EAPoB,KAOZC,EAPY,OAQCV,mBAAS,IARV,mBAQpBW,EARoB,KAQZC,EARY,OASCZ,mBAAS,IATV,mBASpBa,EAToB,KASZC,EATY,KAU3BsC,qBAAU,WACN,sBAAC,oCAAAnC,EAAA,+EAIuBK,IAAM+B,IAAN,UAAaR,GAAb,OAAyBE,EAAMO,GAA/B,MAJvB,OAiBO,IAbAC,EAJP,OAKOC,EAAMD,EAAQ1B,KACdoB,GAAa,GACb7C,EAAQoD,EAAIrD,MACZG,EAAWkD,EAAIhC,MACf2B,EAAYK,EAAIrD,MAChBK,EAAegD,EAAIjD,aACnBkD,EAAe,CACX/C,EACAE,EACAE,GAEJ4C,EAAQC,KAAKC,IAAI,EAAGJ,EAAIrC,OAAOC,QAC1ByC,EAAI,EAAGA,EAAIH,EAAOG,IACnBJ,EAAaI,GAAGL,EAAIrC,OAAO0C,IAlBtC,kDAsBOC,QAAQC,IAAR,MAtBP,yDAAD,KAyBD,CAAChB,EAAMO,KACV,IAAMvC,EAAa,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DAClBD,EAAEE,iBACEC,EAAS,GACTV,EAAOW,OAAS,GAChBD,EAAOE,KAAKZ,GAEZE,EAAOS,OAAS,GAChBD,EAAOE,KAAKV,GAEZE,EAAOO,OAAS,GAChBD,EAAOE,KAAKR,GAVE,kBAaRS,IAAM0C,MAAN,UAAenB,GAAf,OAA2BE,EAAMO,GAAjC,YAA+C,CACjDnD,OACAqB,KAAMnB,EACNE,cACAY,WAjBU,OAmBdM,YAAS,KAnBK,kDAsBdvB,EAAUwB,OAAOC,OAAO,KAAIC,SAASC,KAAK5B,QAAQ6B,KAAI,SAAAC,GAAK,OAAIA,EAAMC,YAtBvD,0DAAH,sDAmFbiC,EAAe,WACjB,OAAsB,IAAlBhE,EAAOmB,OACA,GAIH,8BACI,6BACKnB,EAAO6B,KAAI,SAACC,EAAOQ,GAAR,OACR,6BAAiBR,GAARQ,WAOjC,OACI,gCACI,sBAAKN,MAAO,CACRC,QAAS,OACTC,eAAgB,iBAFpB,UAII,6CACA,cAAC,IAAD,CAAMC,GAAG,IAAT,+BAhFHY,EASG,qCACI,qBAAKf,MAAO,CACRC,QAAS,OACTC,eAAgB,iBAFpB,SAII,uCAAUe,OAGd,qBAAKjB,MAAO,CACRI,YAAa,SADjB,SAGI,uBAAMC,SAAUvB,EAAhB,UACKkD,IACD,8BACI,+CACA,uBAAOzC,KAAK,OAAOgB,MAAOrC,EAAMsC,SAAU,SAACzB,GAAD,OAAKZ,EAAQY,EAAE0B,OAAOF,aAEpE,8BACI,+CACA,uBAAOhB,KAAK,OAAOgB,MAAOnC,EAASoC,SAAU,SAACzB,GAAD,OAAKV,EAAWU,EAAE0B,OAAOF,aAE1E,8BACI,kDACA,uBAAOhB,KAAK,OAAOgB,MAAOjC,EAAakC,SAAU,SAACzB,GAAD,OAAKR,EAAeQ,EAAE0B,OAAOF,aAElF,oDACA,8BACI,8CACA,uBAAOhB,KAAK,OAAOgB,MAAO/B,EAAQgC,SAAU,SAACzB,GAAD,OAAKN,EAAUM,EAAE0B,OAAOF,aAExE,8BACI,8CACA,uBAAOhB,KAAK,OAAOgB,MAAO7B,EAAQ8B,SAAU,SAACzB,GAAD,OAAKJ,EAAUI,EAAE0B,OAAOF,aAExE,8BACI,8CACA,uBAAOhB,KAAK,OAAOgB,MAAO3B,EAAQ4B,SAAU,SAACzB,GAAD,OAAKF,EAAUE,EAAE0B,OAAOF,aAExE,wBAAQhB,KAAK,SAASS,MAAO,CACzBU,gBAAiB,OACjBC,MAAO,SAFX,8BA7CZ,8BACI,kDCnEdC,EAAY,kCAmHHqB,EAlHI,SAACnB,GAAW,IAAD,EACJ/C,mBAAS,MADL,mBACnBwD,EADmB,KACdW,EADc,OAEInE,oBAAS,GAFb,mBAEnBoE,EAFmB,KAEVC,EAFU,KAG1BjB,qBAAU,WACN,sBAAC,4BAAAnC,EAAA,+EAE0BK,IAAM+B,IAAN,UAAaR,GAAb,OAAyBE,EAAMO,GAA/B,MAF1B,OAEWgB,EAFX,OAGOH,EAAOG,EAAOzC,MAHrB,gDAMOiC,QAAQC,IAAR,MANP,wDAAD,KASD,CAACP,EAAKT,EAAMO,KACf,IAAMiB,EAAY,uCAAG,WAAOvD,GAAP,SAAAC,EAAA,+EAEPK,IAAMkD,OAAN,UAAgB3B,GAAhB,OAA4BE,EAAMO,GAAlC,aAFO,OAGb7B,YAAS,KAHI,+CAMbqC,QAAQC,IAAR,MANa,wDAAH,sDASZU,EAAW,uCAAG,sBAAAxD,EAAA,+EAENK,IAAM0C,MAAN,UAAenB,GAAf,OAA2BE,EAAMO,GAAjC,WAFM,OAGZe,GAAW,GAHC,+CAMZP,QAAQC,IAAR,MANY,wDAAH,qDA6EjB,OACI,gCACI,sBAAK9B,MAAO,CACRC,QAAS,OACTC,eAAgB,iBAFpB,UAII,6CACA,cAAC,IAAD,CAAMC,GAAG,IAAT,6BA1EI,OAARoB,EAEI,8BACI,8CAMJ,qCACI,sBAAKvB,MAAO,CACRC,QAAS,OACTC,eAAgB,iBAFpB,UAII,iDAAoBqB,EAAIrD,QACxB,yBAAQuE,QAASH,EAActC,MAAO,CAClCU,gBAAiB,MACjBC,MAAO,SAFX,mBAGUY,EAAIrD,WAElB,sBAAK8B,MAAO,CACRI,YAAa,SADjB,UAGI,sBAAKJ,MAAO,CACRC,QAAS,OACTC,eAAgB,QAFpB,UAII,8BAAK,6CACL,8BAAK,4BAAIqB,EAAIhC,YAEjB,sBAAKS,MAAO,CACRC,QAAS,OACTC,eAAgB,QAFpB,UAII,8BAAK,gDACL,8BAAK,4BAAIqB,EAAIjD,mBAEjB,sBAAK0B,MAAO,CACRC,QAAS,OACTC,eAAgB,QAFpB,UAII,8BAAK,2CACL,8BAC2B,IAAtBqB,EAAIrC,OAAOC,OACR,8CACAoC,EAAIrC,OAAOW,KAAI,SAAC6C,EAAOpC,GAAR,OAAkB,4BAAgBoC,GAARpC,cAKzD,gCACK6B,EACG,wBAAQQ,UAAQ,EAAC3C,MAAO,CACpBU,gBAAiB,OACjBC,MAAO,SAFX,kBAIA,wBAAQ8B,QAASD,EAAaxC,MAAO,CACjCU,gBAAiB,QACjBC,MAAO,SAFX,kBAKA,wCAAWY,EAAIqB,mBCjB5BC,EA7EE,WAAO,IAAD,EACK9E,mBAAS,MADd,mBACZ+E,EADY,KACNC,EADM,KAEnB5B,qBAAU,WACN,sBAAC,8BAAAnC,EAAA,+EAE2BK,IAAM+B,IANxB,mCAIT,OAEW4B,EAFX,QAGWC,EAAUD,EAAQpD,MACdsD,MAAK,SAAClE,EAAGmE,GAAJ,OAAUnE,EAAEO,KAAK6D,cAAcD,EAAE5D,SAC9CwD,EAAQE,GALf,gDAQOpB,QAAQC,IAAR,MARP,wDAAD,KAWD,CAACgB,IA2CJ,OACI,gCACI,sBAAK9C,MAAO,CACRC,QAAS,OACTC,eAAgB,iBAFpB,UAII,6CACA,cAAC,IAAD,CAAMC,GAAG,aAAT,qCAEJ,qBAAKH,MAAO,CACRC,QAAS,OACTC,eAAgB,iBAFpB,SAII,0EAtDK,OAAT4C,EAEI,8BACI,8CAIa,IAAhBA,EAAK3D,OAEN,8BACI,mEAMJ,8BACI,kCACI,gCACI,+BACI,sCACA,sCACA,8CAGR,gCACK2D,EAAKjD,KAAI,SAAC0B,EAAKjB,GAAN,OACN,+BACI,6BAAKiB,EAAIrD,OACT,6BAAKqD,EAAIhC,OACT,+BACI,cAAC,IAAD,CAAMY,GAAE,gBAAWoB,EAAI8B,KAAvB,qBADJ,MACmD,cAAC,IAAD,CAAMlD,GAAE,gBAAWoB,EAAI8B,IAAf,UAAR,uBAJ/C,uBC3BzBC,MAbf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAUC,KAAK,MACf,cAAC,EAAD,CAAeA,KAAK,cACpB,cAAC,EAAD,CAAYA,KAAK,eACjB,cAAC,EAAD,CAAaA,KAAK,0BCHXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.acacb2c1.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Link, navigate} from \"@reach/router\";\r\nimport axios from \"axios\";\r\n\r\nconst urlPrefix = \"http://localhost:8000/api/pets/\";\r\nconst CreatePetForm = () => {\r\n    const [errors, setErrors] = useState([]);\r\n    const [name, setName] = useState(\"\");\r\n    const [petType, setPetType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        let skills = [];\r\n        if (skill1.length > 0){\r\n            skills.push(skill1);\r\n        }\r\n        if (skill2.length > 0){\r\n            skills.push(skill2);\r\n        }\r\n        if (skill3.length > 0){\r\n            skills.push(skill3);\r\n        }\r\n        try {\r\n            await axios.post(`${urlPrefix}create/`, {\r\n                name,\r\n                type: petType,\r\n                description,\r\n                skills\r\n            })\r\n            navigate(\"/\")\r\n        }\r\n        catch (err){\r\n            setErrors(Object.values(err.response.data.errors).map(error => error.message));\r\n        }\r\n    };\r\n    const renderErrors = () => {\r\n        if (errors.length === 0){\r\n            return \"\";\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <ul>\r\n                        {errors.map((error, index) =>\r\n                            <li key={index}>{error}</li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\"\r\n            }}>\r\n                <h1>Pet Shelter</h1>\r\n                <Link to=\"/\">Return to home</Link>\r\n            </div>\r\n            <div>\r\n                <h3>Know a pet needing a home?</h3>\r\n            </div>\r\n            <div style={{\r\n                borderStyle: \"solid\"\r\n            }}>\r\n                <form onSubmit={submitHandler}>\r\n                    {renderErrors()}\r\n                    <p>\r\n                        <label>Pet Name: </label>\r\n                        <input type=\"text\" value={name} onChange={(e)=>setName(e.target.value)}/>\r\n                    </p>\r\n                    <p>\r\n                        <label>Pet Type: </label>\r\n                        <input type=\"text\" value={petType} onChange={(e)=>setPetType(e.target.value)}/>\r\n                    </p>\r\n                    <p>\r\n                        <label>Description: </label>\r\n                        <input type=\"text\" value={description} onChange={(e)=>setDescription(e.target.value)}/>\r\n                    </p>\r\n                    <h4>Skills: (Optional)</h4>\r\n                    <p>\r\n                        <label>Skill 1: </label>\r\n                        <input type=\"text\" value={skill1} onChange={(e)=>setSkill1(e.target.value)}/>\r\n                    </p>\r\n                    <p>\r\n                        <label>Skill 2: </label>\r\n                        <input type=\"text\" value={skill2} onChange={(e)=>setSkill2(e.target.value)}/>\r\n                    </p>\r\n                    <p>\r\n                        <label>Skill 3: </label>\r\n                        <input type=\"text\" value={skill3} onChange={(e)=>setSkill3(e.target.value)}/>\r\n                    </p>\r\n                    <button type=\"submit\" style={{\r\n                        backgroundColor: \"blue\",\r\n                        color: \"white\"\r\n                    }}>Add Pet</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CreatePetForm;","import React, {useState, useEffect} from \"react\";\r\nimport {Link, navigate} from \"@reach/router\";\r\nimport axios from \"axios\";\r\n\r\nconst urlPrefix = \"http://localhost:8000/api/pets/\";\r\nconst EditPetForm = (props) => {\r\n    const [errors, setErrors] = useState([]);\r\n    const [petLoaded, setPetLoaded] = useState(false)\r\n    const [prevName, setPrevName] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [petType, setPetType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                let request, pet,\r\n                    skillSetters, i, bound;\r\n                request = await axios.get(`${urlPrefix}${props.id}/`);\r\n                pet = request.data;\r\n                setPetLoaded(true);\r\n                setName(pet.name);\r\n                setPetType(pet.type);\r\n                setPrevName(pet.name);\r\n                setDescription(pet.description);\r\n                skillSetters = [\r\n                    setSkill1,\r\n                    setSkill2,\r\n                    setSkill3\r\n                ];\r\n                bound = Math.min(3, pet.skills.length)\r\n                for (i = 0; i < bound; i++){\r\n                    skillSetters[i](pet.skills[i]);\r\n                }\r\n            }\r\n            catch (err){\r\n                console.log(err);\r\n            }\r\n        })();\r\n    }, [props.id])\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        let skills = [];\r\n        if (skill1.length > 0){\r\n            skills.push(skill1);\r\n        }\r\n        if (skill2.length > 0){\r\n            skills.push(skill2);\r\n        }\r\n        if (skill3.length > 0){\r\n            skills.push(skill3);\r\n        }\r\n        try {\r\n            await axios.patch(`${urlPrefix}${props.id}/update/`, {\r\n                name,\r\n                type: petType,\r\n                description,\r\n                skills\r\n            })\r\n            navigate(\"/\");\r\n        }\r\n        catch (err){\r\n            setErrors(Object.values(err.response.data.errors).map(error => error.message));\r\n        }\r\n    };\r\n    const renderPetData = () => {\r\n        if (!petLoaded){\r\n            return (\r\n                <div>\r\n                    <h3>Loading...</h3>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\"\r\n                    }}>\r\n                        <h3>Edit {prevName}</h3>\r\n\r\n                    </div>\r\n                    <div style={{\r\n                        borderStyle: \"solid\"\r\n                    }}>\r\n                        <form onSubmit={submitHandler}>\r\n                            {renderErrors()}\r\n                            <p>\r\n                                <label>Pet Name: </label>\r\n                                <input type=\"text\" value={name} onChange={(e)=>setName(e.target.value)}/>\r\n                            </p>\r\n                            <p>\r\n                                <label>Pet Type: </label>\r\n                                <input type=\"text\" value={petType} onChange={(e)=>setPetType(e.target.value)}/>\r\n                            </p>\r\n                            <p>\r\n                                <label>Description: </label>\r\n                                <input type=\"text\" value={description} onChange={(e)=>setDescription(e.target.value)}/>\r\n                            </p>\r\n                            <h4>Skills: (Optional)</h4>\r\n                            <p>\r\n                                <label>Skill 1: </label>\r\n                                <input type=\"text\" value={skill1} onChange={(e)=>setSkill1(e.target.value)}/>\r\n                            </p>\r\n                            <p>\r\n                                <label>Skill 2: </label>\r\n                                <input type=\"text\" value={skill2} onChange={(e)=>setSkill2(e.target.value)}/>\r\n                            </p>\r\n                            <p>\r\n                                <label>Skill 3: </label>\r\n                                <input type=\"text\" value={skill3} onChange={(e)=>setSkill3(e.target.value)}/>\r\n                            </p>\r\n                            <button type=\"submit\" style={{\r\n                                backgroundColor: \"blue\",\r\n                                color: \"white\"\r\n                            }}>Edit Pet</button>\r\n                        </form>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n    const renderErrors = () => {\r\n        if (errors.length === 0){\r\n            return \"\";\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <ul>\r\n                        {errors.map((error, index) =>\r\n                            <li key={index}>{error}</li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\"\r\n            }}>\r\n                <h1>Pet Shelter</h1>\r\n                <Link to=\"/\">Return to home</Link>\r\n            </div>\r\n            {renderPetData()}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditPetForm;","import React, {useState, useEffect} from \"react\";\r\nimport {Link, navigate} from \"@reach/router\";\r\nimport axios from \"axios\";\r\n\r\nconst urlPrefix = \"http://localhost:8000/api/pets/\";\r\nconst PetDetails = (props) => {\r\n    const [pet, setPet] = useState(null);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                let petReq = await axios.get(`${urlPrefix}${props.id}/`);\r\n                setPet(petReq.data);\r\n            }\r\n            catch (err){\r\n                console.log(err);\r\n            }\r\n        })();\r\n    }, [pet, props.id]);\r\n    const adoptHandler = async (e) => {\r\n        try {\r\n            await axios.delete(`${urlPrefix}${props.id}/delete/`);\r\n            navigate(\"/\");\r\n        }\r\n        catch (err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    const likeHandler = async () => {\r\n        try {\r\n            await axios.patch(`${urlPrefix}${props.id}/like/`);\r\n            setIsLiked(true);\r\n        }\r\n        catch (err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    const renderPet = () => {\r\n        if (pet === null){\r\n            return (\r\n                <div>\r\n                    <h3>Loading...</h3>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\"\r\n                    }}>\r\n                        <h2>Details about: {pet.name}</h2>\r\n                        <button onClick={adoptHandler} style={{\r\n                            backgroundColor: \"red\",\r\n                            color: \"white\"\r\n                        }}>Adopt {pet.name}</button>\r\n                    </div>\r\n                    <div style={{\r\n                        borderStyle: \"solid\"\r\n                    }}>\r\n                        <div style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"left\"\r\n                        }}>\r\n                            <div><h4>Pet type:</h4></div>\r\n                            <div><p>{pet.type}</p></div>\r\n                        </div>\r\n                        <div style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"left\"\r\n                        }}>\r\n                            <div><h4>Description:</h4></div>\r\n                            <div><p>{pet.description}</p></div>\r\n                        </div>\r\n                        <div style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"left\"\r\n                        }}>\r\n                            <div><h4>Skills:</h4></div>\r\n                            <div>\r\n                                {pet.skills.length === 0 ?\r\n                                    <p>--no skills--</p> :\r\n                                    pet.skills.map((skill, index) => <p key={index}>{skill}</p>)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {isLiked ?\r\n                            <button disabled style={{\r\n                                backgroundColor: \"grey\",\r\n                                color: \"white\"\r\n                            }}>Like</button> :\r\n                            <button onClick={likeHandler} style={{\r\n                                backgroundColor: \"green\",\r\n                                color: \"white\"\r\n                            }}>Like</button>\r\n                        }\r\n                            <p>Likes: {pet.likes}</p>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\"\r\n            }}>\r\n                <h1>Pet Shelter</h1>\r\n                <Link to=\"/\">Back to home</Link>\r\n            </div>\r\n            {renderPet()}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PetDetails;","import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"@reach/router\";\r\nimport axios from \"axios\";\r\n\r\nconst urlPrefix = \"http://localhost:8000/api/pets/\";\r\nconst PetTable = () => {\r\n    const [pets, setPets] = useState(null);\r\n    useEffect(() => {\r\n        (async () => {\r\n            try{\r\n                let petsReq = await axios.get(urlPrefix);\r\n                let petList = petsReq.data;\r\n                petList.sort((a, b) => a.type.localeCompare(b.type));\r\n                setPets(petList);\r\n            }\r\n            catch (err){\r\n                console.log(err);\r\n            }\r\n        })();\r\n    }, [pets]);\r\n    const renderTable = () => {\r\n        if (pets === null){\r\n            return (\r\n                <div>\r\n                    <h3>Loading...</h3>\r\n                </div>\r\n            )\r\n        }\r\n        else if (pets.length === 0){\r\n            return (\r\n                <div>\r\n                    <h3>The shelter is currently empty!</h3>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Type</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {pets.map((pet, index) => \r\n                                <tr key=\"index\">\r\n                                    <td>{pet.name}</td>\r\n                                    <td>{pet.type}</td>\r\n                                    <td>\r\n                                        <Link to={`/pets/${pet._id}`}>details</Link> | <Link to={`/pets/${pet._id}/edit/`}>edit</Link>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\"\r\n            }}>\r\n                <h1>Pet Shelter</h1>\r\n                <Link to=\"/pets/new/\">Add a pet to shelter</Link>\r\n            </div>\r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\"\r\n            }}>\r\n                <h2>These pets are looking for a good home</h2>\r\n            </div>\r\n            {renderTable()}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PetTable;","import './App.css';\nimport React from \"react\";\nimport {Router} from \"@reach/router\";\nimport CreatePetForm from \"./components/createPetForm\";\nimport EditPetForm from \"./components/editPetForm\";\nimport PetDetails from \"./components/petDetails\";\nimport PetTable from \"./components/petTable\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <PetTable path=\"/\"/>\n        <CreatePetForm path=\"/pets/new\"/>\n        <PetDetails path=\"/pets/:id/\"/>\n        <EditPetForm path=\"/pets/:id/edit/\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}